Copyright (c) 029D-FFB2 The FreeBSD Project.
Copyright (c) 1979, 1980, 1983, 1986, 1988, 1989, 1991, 1992, 1993, 1994
	The Regents of the University of California. All rights reserved.
FreeBSD is a registered trademark of The FreeBSD Foundation.
FreeBSD 11.3-STABLE #238 885b1ed26b6(factory-RELENG_2_4_5): Tue Jun  2 17:52:40 EDT 2020
    XXX@XXX:/build/factory-crossbuild-245-armv6/obj/armv6/kJlGauaG/arm.armv6/build/factory-crossbuild-245-armv6/sources/FreeBSD-src/sys/pfSense-SG-3100 arm
FreeBSD clang version 8.0.1 (tags/RELEASE_801/final 366581) (based on LLVM 8.0.1)
CPU: ARM Cortex-A9 r4p1 (ECO: 0x00000000)
CPU Features:
  Multiprocessing, Thumb2, Security, VMSAv7, Coherent Walk
Optional instructions:
  UMULL, SMULL, SIMD(ext)
LoUU:2 LoC:2 LoUIS:2
Cache level 1:
 32KB/32B 4-way data cache WB Read-Alloc Write-Alloc
 32KB/32B 4-way instruction cache Read-Alloc
real memory  = 2147479552 (2047 MB)
avail memory = 2073812992 (1977 MB)
SOC: Marvell 88F6820, TClock 250MHz, Frequency 1600MHz
  Instruction cache prefetch enabled, data cache prefetch disabled
FreeBSD/SMP: Multiprocessor System Detected: 2 CPUs
wlan: mac acl policy registered
random: entropy device external interface
ipw_ibss: You need to read the LICENSE file in /usr/share/doc/legal/intel_ipw.LICENSE.
ipw_ibss: If you agree with the license, set legal.intel_ipw.license_ack=1 in /boot/loader.conf.
module_register_init: MOD_LOAD (ipw_ibss_fw, 0xc0135c50, 0) error 1
ipw_monitor: You need to read the LICENSE file in /usr/share/doc/legal/intel_ipw.LICENSE.
ipw_monitor: If you agree with the license, set legal.intel_ipw.license_ack=1 in /boot/loader.conf.
module_register_init: MOD_LOAD (ipw_monitor_fw, 0xc0135d00, 0) error 1
iwi_bss: You need to read the LICENSE file in /usr/share/doc/legal/intel_iwi.LICENSE.
iwi_bss: If you agree with the license, set legal.intel_iwi.license_ack=1 in /boot/loader.conf.
module_register_init: MOD_LOAD (iwi_bss_fw, 0xc013f1ec, 0) error 1
iwi_ibss: You need to read the LICENSE file in /usr/share/doc/legal/intel_iwi.LICENSE.
iwi_ibss: If you agree with the license, set legal.intel_iwi.license_ack=1 in /boot/loader.conf.
module_register_init: MOD_LOAD (iwi_ibss_fw, 0xc013f29c, 0) error 1
iwi_monitor: You need to read the LICENSE file in /usr/share/doc/legal/intel_iwi.LICENSE.
iwi_monitor: If you agree with the license, set legal.intel_iwi.license_ack=1 in /boot/loader.conf.
module_register_init: MOD_LOAD (iwi_monitor_fw, 0xc013f34c, 0) error 1
ipw_bss: You need to read the LICENSE file in /usr/share/doc/legal/intel_ipw.LICENSE.
ipw_bss: If you agree with the license, set legal.intel_ipw.license_ack=1 in /boot/loader.conf.
module_register_init: MOD_LOAD (ipw_bss_fw, 0xc0135ba0, 0) error 1
ofwbus0: <Open Firmware Device Tree>
simplebus0: <Flattened device tree simple bus> on ofwbus0
simplebus1: <Flattened device tree simple bus> on simplebus0
l2cache0: <PL310 L2 cache controller> mem 0x8000-0x8fff on simplebus1
l2cache0: cannot allocate IRQ, not using interrupt
l2cache0: Part number: 0x3, release: 0x9
l2cache0: L2 Cache enabled: 1024KB/32B 16 ways
gic0: <ARM Generic Interrupt Controller> mem 0xd000-0xdfff,0xc100-0xc1ff on simplebus1
gic0: pn 0x390, arch 0x1, rev 0x2, implementer 0x43b irqs 192
mpic0: <Marvell Integrated Interrupt Controller> mem 0x20a00-0x20ccf,0x21870-0x21b6f irq 19 on simplebus1
mp_tmr0: <ARM MPCore Timers> mem 0xc200-0xc21f irq 3 on simplebus1
Timecounter "MPCore" frequency 800000000 Hz quality 800
mp_tmr1: <ARM MPCore Timers> mem 0xc600-0xc61f irq 4 on simplebus1
Event timer "MPCore" frequency 800000000 Hz quality 1000
cesa0: <Marvell Cryptographic Engine and Security Accelerator> mem 0x90000-0x90fff,0x9d000-0x9dfff irq 1 on simplebus1
cesa1: <Marvell Cryptographic Engine and Security Accelerator> mem 0x92000-0x92fff,0x9f000-0x9ffff irq 2 on simplebus1
spi0: <Marvell SPI controller> mem 0x10600-0x1064f irq 5 on simplebus1
twsi0: <Marvell Integrated I2C Bus Controller> mem 0x11000-0x1101f irq 7 on simplebus1
iicbus0: <OFW I2C bus> on twsi0
iic0: <I2C generic I/O> on iicbus0
gpio0: <NXP PCA9552 LED driver> at addr 0xc0 on iicbus0
device_attach: gpio0 attach returned 6
gpio0: <ISSI IS31FL3199 9 channel light effect LED driver> at addr 0xce on iicbus0
gpiobus0: <OFW GPIO bus> on gpio0
gpioc0: <GPIO controller> on gpio0
gpio1: <NXP PCA9552 LED driver> at addr 0xc0 on iicbus0
device_attach: gpio1 attach returned 6
uart0: <Non-standard ns8250 class UART with FIFOs> mem 0x12000-0x120ff irq 9 on simplebus1
uart0: console (-1,n,8,1)
uart1: <16550 or compatible> mem 0x12100-0x121ff irq 10 on simplebus1
timer0: <Marvell CPU Timer> mem 0x20300-0x20333,0x20704-0x20707,0x18260-0x18263 on simplebus1
timer0: only watchdog attached
pmsu0: <Power Management Service Unit> mem 0x22000-0x22fff on simplebus1
mvneta0: <NETA controller> mem 0x30000-0x33fff irq 26 on simplebus1
mvneta0: version is 10
mvneta0: Ethernet address: ...
miibus0: <MII bus> on mvneta0
mv88e151x0: <Marvell 88E1512 Gigabit PHY> PHY 1 on miibus0
mv88e151x0:  none, 10baseT, 10baseT-FDX, 100baseTX, 100baseTX-FDX, 1000baseT, 1000baseT-master, 1000baseT-FDX, 1000baseT-FDX-master, 1000baseSX, 1000baseSX-FDX, auto
mvneta1: <NETA controller> mem 0x34000-0x37fff irq 27 on simplebus1
mvneta1: version is 10
mvneta1: Ethernet address: ...
mdio0: <MDIO> on mvneta1
e6000sw0: <Marvell 88E6141> on mdio0
e6000sw0: single-chip addressing mode
e6000sw0: PHY at port 1
miibus1: <MII bus> on e6000sw0
e1000phy0: <Marvell 88E1000 Gigabit PHY> PHY 17 on miibus1
e1000phy0:  none, 10baseT, 10baseT-FDX, 100baseTX, 100baseTX-FDX, 1000baseT, 1000baseT-master, 1000baseT-FDX, 1000baseT-FDX-master, auto
e6000sw0: PHY at port 2
miibus2: <MII bus> on e6000sw0
e1000phy1: <Marvell 88E1000 Gigabit PHY> PHY 18 on miibus2
e1000phy1:  none, 10baseT, 10baseT-FDX, 100baseTX, 100baseTX-FDX, 1000baseT, 1000baseT-master, 1000baseT-FDX, 1000baseT-FDX-master, auto
e6000sw0: PHY at port 3
miibus3: <MII bus> on e6000sw0
e1000phy2: <Marvell 88E1000 Gigabit PHY> PHY 19 on miibus3
e1000phy2:  none, 10baseT, 10baseT-FDX, 100baseTX, 100baseTX-FDX, 1000baseT, 1000baseT-master, 1000baseT-FDX, 1000baseT-FDX-master, auto
e6000sw0: PHY at port 4
miibus4: <MII bus> on e6000sw0
e1000phy3: <Marvell 88E1000 Gigabit PHY> PHY 20 on miibus4
e1000phy3:  none, 10baseT, 10baseT-FDX, 100baseTX, 100baseTX-FDX, 1000baseT, 1000baseT-master, 1000baseT-FDX, 1000baseT-FDX-master, auto
e6000sw0: CPU port at 5
e6000sw0: fixed port at 5
e6000sw0: switch is ready.
etherswitch0: <Switch controller> on e6000sw0
ehci0: <Marvell Integrated USB 2.0 controller> mem 0x58000-0x584ff irq 28 on simplebus1
usbus0: EHCI version 1.0
usbus0 on ehci0
mvneta2: <NETA controller> mem 0x70000-0x73fff irq 29 on simplebus1
mvneta2: version is 10
mvneta2: Ethernet address: ...
miibus5: <MII bus> on mvneta2
mv88e151x1: <Marvell 88E1512 Gigabit PHY> PHY 0 on miibus5
mv88e151x1:  none, 10baseT, 10baseT-FDX, 100baseTX, 100baseTX-FDX, 1000baseT, 1000baseT-master, 1000baseT-FDX, 1000baseT-FDX-master, 1000baseSX, 1000baseSX-FDX, auto
rtc0: <Marvell Integrated RTC> mem 0xa3800-0xa381f,0x184a0-0x184ab irq 30 on simplebus1
rtc0: registered as a time-of-day clock, resolution 1.000000s
ahci0: <Marvell AHCI Controller> mem 0xa8000-0xa9fff irq 31 on simplebus1
ahci0: AHCI v1.00 with 2 6Gbps ports, Port Multiplier supported with FBS
ahci0: quirks=0x200010<2CH,MRVL_SR_DEL>
ahcich0: <AHCI channel> at channel 0 on ahci0
ahcich1: <AHCI channel> at channel 1 on ahci0
armada_thermal0: <Armada380 Thermal Control> mem 0xe4078-0xe407b,0xe4074-0xe4077 on simplebus1
sdhci_fdt0: <ARMADA38X SDHCI controller> mem 0xd8000-0xd8fff,0xdc000-0xdc0ff,0x18454-0x18457 irq 34 on simplebus1
sdhci_fdt0: 1 slot(s) allocated
xhci0: <Marvell Integrated USB 3.0 controller> mem 0xf8000-0xfbfff,0xfc000-0xfffff irq 36 on simplebus1
xhci0: 32 bytes context size, 32-bit DMA
usbus1 on xhci0
pcib_ctrl0: <Marvell Integrated PCIe Bus Controller> on simplebus0
pcib0: <Marvell Integrated PCI/PCI-E Controller> on pcib_ctrl0
pci0: <PCI bus> on pcib0
pcib1: <Marvell Integrated PCI/PCI-E Controller> on pcib_ctrl0
pci1: <PCI bus> on pcib1
pcib2: <Marvell Integrated PCI/PCI-E Controller> on pcib_ctrl0
pci2: <PCI bus> on pcib2
pcib3: <Marvell Integrated PCI/PCI-E Controller> on pcib_ctrl0
pci3: <PCI bus> on pcib3
cpulist0: <Open Firmware CPU Group> on ofwbus0
cpu0: <Open Firmware CPU> on cpulist0
cpu1: <Open Firmware CPU> on cpulist0
cryptosoft0: <software crypto>
Timecounters tick every 1.000 msec
mvneta1: link state changed to UP
spibus0:
e6000sw0port1: link state changed to DOWN
e6000sw0port2: link state changed to DOWN
e6000sw0port3: link state changed to DOWN
e6000sw0port4: link state changed to DOWN
usbus0: 480Mbps High Speed USB v2.0
usbus1: 5.0Gbps Super Speed USB v3.0
<OFW SPI bus> on spi0
mx25l0: <M25Pxx Flash Family> at cs 0 mode 0 on spibus0
mx25l0: device type w25q32jv, size 4096K in 64 sectors of 64K, erase size 4K
ugen1.1: <Marvell XHCI root HUB> at usbus1
uhub0: <Marvell XHCI root HUB, class 9/0, rev 3.00/1.00, addr 1> on usbus1
ugen0.1: <Marvell EHCI root HUB> at usbus0
uhub1: <Marvell EHCI root HUB, class 9/0, rev 2.00/1.00, addr 1> on usbus0
uhub0: 2 ports with 2 removable, self powered
mmc0: <MMC/SD bus> on sdhci_fdt0
mmcsd0: 8GB <MMCHC M32508 0.1 SN ... MFG 12/2018 by 112 0x0000> at mmc0 50.0MHz/8bit/65535-block
mmcsd0boot0: 4MB partion 1 at mmcsd0
mmcsd0boot1: 4MB partion 2 at mmcsd0
mmcsd0rpmb: 4MB partion 3 at mmcsd0
uhub1: 1 port with 1 removable, self powered
e6000sw0port1: link state changed to UP
e6000sw0port2: link state changed to UP
e6000sw0port3: link state changed to UP
e6000sw0port4: link state changed to UP
ada0 at ahcich0 bus 0 scbus0 target 0 lun 0
ada0: <KINGSTON SUV500M8120G 003056R6> ACS-4 ATA SATA 3.x device
ada0: Serial Number...
ada0: 600.000MB/s transfers (SATA 3.x, UDMA6, PIO 512bytes)
ada0: Command Queueing enabled
ada0: 114473MB (234441648 512 byte sectors)
Release APs
Trying to mount root from ufs:/dev/diskid/XXXXXXXXXXXXXXXXXXXXXXXX [rw,noatime]...
random: unblocking device.
